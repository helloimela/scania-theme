@import 'variables';

// This file is generated and will exist in dist
@import url(../fonts/fonts.css);

// Lists
$theme-colors: (
  'theme-01': $theme-01,
  'theme-02': $theme-02,
  'theme-03': $theme-03
);

$primary-colors: (
  'primary-01': $primary-01,
  'primary-02': $primary-02,
  'primary-03': $primary-03,
  'primary-04': $primary-04
);

$secondary-colors: (
  'secondary-01': $secondary-01,
  'secondary-02': $secondary-02,
  'secondary-03': $secondary-03,
  'secondary-04': $secondary-04
);

$tertiary-colors: (
  'tertiary-01': $tertiary-01,
  'tertiary-02': $tertiary-02,
  'tertiary-03': $tertiary-03,
  'tertiary-04': $tertiary-04,
  'tertiary-05': $tertiary-05,
  'tertiary-06': $tertiary-06,
  'tertiary-07': $tertiary-07,
  'tertiary-08': $tertiary-08
);

$gray-colors: (
  'gray-01': $gray-100,
  'gray-02': $gray-200,
  'gray-03': $gray-300,
  'gray-04': $gray-400,
  'gray-05': $gray-500,
  'gray-06': $gray-600,
  'gray-07': $gray-700,
  'gray-08': $gray-800,
  'gray-09': $gray-900
);

$element-colors: (
  'headings-color': var(--headings-color),
  'link-color': var(--tertiary-01),
  'link-color-hover': darken($tertiary-01, 40%)
);

$heading-sizes: (
  'h1': $h1-font-size,
  'h2': $h2-font-size,
  'h3': $h3-font-size,
  'h4': $h4-font-size,
  'h5': $h5-font-size,
  'h6': $h6-font-size
);

$heading-sizes-article: (
  'h1': $h1-font-size-article,
  'h2': $h2-font-size-article,
  'h3': $h3-font-size-article,
  'h4': $h4-font-size-article,
  'h5': $h5-font-size-article,
  'h6': $h6-font-size-article
);


// Merge all colors in to theme-colors and 
// let "root.scss" render the css variables
@each $type in ($theme-colors, $primary-colors, $secondary-colors, $tertiary-colors, $gray-colors, $element-colors) {
  $theme-colors: map-merge($theme-colors, $type);
}


// Bootstrap imports
@import 'node_modules/bootstrap/scss/functions';
@import 'node_modules/bootstrap/scss/variables';
@import 'node_modules/bootstrap/scss/root';


// Helpers
@mixin renderMap($mapping, $prop) {
  @each $key, $value in $mapping {
    #{$key} { #{$prop}: $value; }
  }
}


// Output rules
* {
  box-sizing: border-box;
}
html,
body {
  display: flex;
  flex-direction: column;
}
html {
  height: 100%;
}
body {
  font-family: $font-family-base;
  font-size: $font-size-base;
  color: $body-color;
  margin: 0;
  flex: 1;
}
a {
  color: var(--link-color);

  &:hover,
  &:active,
  &.active {
    color: var(--link-color-hover);
  }
}
p {
  margin-bottom: 1.5rem;
}
h1,
h2,
h3,
h4,
h5,
h6 {
  font-family: $headings-font-family;
  color: var(--headings-color);
  font-weight: bold;
  margin-bottom: 1rem;

  &:first-child {
    margin-top: 0;
  }
}
h1,
h2,
h3 {
  margin-top: 2.5rem;
}
h4,
h5,
h6 {
  margin-top: 1.5rem;
}

@include renderMap($heading-sizes, 'font-size');

h5,
h6 { font-family: $font-family-base; }
h6 { font-style: italic; }

article {
  font-family: $font-family-article;
  font-size: $font-size-article;

  @include renderMap($heading-sizes-article, 'font-size');
}

// .app {

//   body,
//   body& {

//   }
// }
